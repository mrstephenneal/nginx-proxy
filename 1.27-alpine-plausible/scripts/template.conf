# Proxy cache setting
proxy_cache_path /data/nginx/cache/@DOMAIN/ levels=1:2 keys_zone=@DOMAIN:100m max_size=10g inactive=120m
use_temp_path=off;
proxy_cache_valid any 48h;

# Upstream
upstream @DOMAIN_@WEBSERVER_https {
    # The keepalive parameter sets the maximum number of idle keepalive connections
    # to upstream servers that are preserved in the cache of each worker process. When
    # this number is exceeded, the least recently used connections are closed.
    keepalive 100;
    
    server @WEBSERVER:443;
}


# @DOMAIN (http)
server {
    listen 80;
    server_name @DOMAIN;

    # Compression config
    include /etc/nginx/compression.conf;

    # Redirect Letsencrypt challenges to validation server
    location /.well-known/acme-challenge/ {
        return 301 http://@VALIDATION_DOMAIN$request_uri;
    }

    # Redirect http requests to https
    location / {
        return 301 https://$host$request_uri;
    }
}


# @DOMAIN (https)
server {
    listen 443 ssl;
    server_name @DOMAIN;

    # SSL Certificates
    ssl_certificate /etc/letsencrypt/live/@DOMAIN/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/@DOMAIN/privkey.pem;

    # TLS Params
    include /etc/nginx/options-ssl-nginx.conf;
    ssl_dhparam /etc/nginx/ssl-dhparams.pem;

    # Compression config
    include /etc/nginx/compression.conf;

    # Letsencrypt ACME challenege redirect
    location /.well-known/acme-challenge/ {
        return 301 http://@VALIDATION_DOMAIN$request_uri;
    }

    resolver 9.9.9.9; # Use quad9 DNS resolver. Remove this line if you've already configured a DNS resolver.
    set $plausible_script_url https://plausible.io/js/script.js; # Change this if you use a different variant of the script
    set $plausible_event_url https://plausible.io/api/event;
    location = /js/script.js {
        proxy_pass $plausible_script_url;
        proxy_set_header Host plausible.io;


        # Tiny, negligible performance improvement. Very optional.
        proxy_buffering on;

        # Cache the script for 6 hours, as long as plausible.io returns a valid response
        proxy_cache @DOMAIN;
        proxy_cache_valid 200 6h;
        proxy_cache_use_stale updating error timeout invalid_header http_500;

        # Optional. Adds a header to tell if you got a cache hit or miss
        add_header X-Cache $upstream_cache_status;
    }

    location = /api/event {
        proxy_pass $plausible_event_url;
        proxy_set_header Host plausible.io;
        proxy_buffering on;
        proxy_http_version 1.1;

        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host  $host;
    }

    # Caching for asset files
    location ~ (public|assets|uploads|css|favicon|fonts|js|img|images|storage) {
        # Enable buffering
        proxy_buffering on;
        proxy_buffers 16 4k;
        proxy_buffer_size 2k;

        # Zip static content
        gzip_static on;

        # Proxy cache name
        proxy_cache @DOMAIN;

        # instructs NGINX to use conditional GET requests when refreshing content from the origin servers
        proxy_cache_revalidate on;

        # sets the number of times an item must be requested by clients before NGINX caches it
        proxy_cache_min_uses 1;

        # instructs NGINX to deliver stale content when clients request an item that is expired
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;

        # if multiple clients request a file that is not current in the cache (a MISS), only the first of those requests is allowed through to the origin server
        proxy_cache_lock on;

        # ignore headers preventing content from being cached
        proxy_cache_valid      200  1d;
        proxy_ignore_headers Cache-Control;

        # Cache expiration (1 month)
        add_header Expires 2628000;
        add_header X-Accel-Expires 2628000;
        add_header Cache-Control max-age=2628000;
        add_header X-Cache-Status $upstream_cache_status;

        # Proxy pass/redirection
        proxy_redirect     off;
        proxy_set_header   Host $host:$server_port;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass         https://@DOMAIN_@WEBSERVER_https;

        proxy_read_timeout     300;
        proxy_connect_timeout  300;

        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;

        # Remove the Connection header if the client sends it,
        # it could be "close" to close a keepalive connection
        proxy_set_header Connection "";
    }

    location / {
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;

        add_header X-Cache-Status $upstream_cache_status;

        # Proxy pass/redirection
        proxy_pass         https://@DOMAIN_@WEBSERVER_https;

        proxy_read_timeout     300;
        proxy_connect_timeout  300;

        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;

        # Remove the Connection header if the client sends it,
        # it could be "close" to close a keepalive connection
        proxy_set_header Connection "";
    }
}